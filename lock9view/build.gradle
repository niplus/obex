apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'Android-Lock9View'

    siteUrl = 'https://github.com/TakWolf/Android-Lock9View'
    gitUrl = 'https://github.com/TakWolf/Android-Lock9View.git'

    groupId = 'com.takwolf.android'
    artifactId = 'lock9view'

    libraryVersion = '0.1.3'
    libraryName = 'Android Lock9View'
    libraryDescription = 'An Android grid lock screen view with a callback interface.'

    developerId = 'TakWolf'
    developerName = 'TakWolf'
    developerEmail = 'takwolf@foxmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']
}

android {

    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode Integer.parseInt(new Date().format('yyyyMMdd'))
        versionName libraryVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'com.android.support:support-annotations:27.1.1'
}

//apply from: 'https://raw.githubusercontent.com/TakWolf/Bintray-Publish-Script-For-Android/master/install.gradle'
//apply from: 'https://raw.githubusercontent.com/TakWolf/Bintray-Publish-Script-For-Android/master/bintray.gradle'

//apply plugin: 'com.github.dcendents.android-maven'

//group = groupId                               // Maven Group ID for the artifact

//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                groupId groupId
//                artifactId artifactId
//
//                // Add your description here
//                name libraryName
//                description libraryDescription
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name licenseName
//                        url licenseUrl
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
//            }
//        }
//    }
//}
//
//apply plugin: 'com.jfrog.bintray'
//
//version = libraryVersion
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

//afterEvaluate {
//    javadoc.classpath += files(android.libraryVariants.collect { variant ->
//        variant.javaCompile.classpath.files
//    })
//}
//
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

// Bintray
//String bintrayUser = System.getenv('BINTRAY_USER')
//String bintrayKey = System.getenv('BINTRAY_KEY')
//String bintrayGpgPassword = System.getenv('BINTRAY_GPG_PASSWORD')
//File localPropertiesFile = project.rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    Properties properties = new Properties()
//    properties.load(localPropertiesFile.newDataInputStream())
//    bintrayUser = properties.getProperty("bintray.user", bintrayUser)
//    bintrayKey = properties.getProperty("bintray.key", bintrayKey)
//    bintrayGpgPassword = properties.getProperty("bintray.gpg.password", bintrayGpgPassword)
//}
//
//bintray {
//    user = bintrayUser
//    key = bintrayKey
//
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        publish = true
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = bintrayGpgPassword
//                //Optional. The passphrase for GPG signing'
//            }
//        }
//    }
//}
